/*
 * Copyright (c) 2021 Yonatan Schachter
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;

#include "pl02_rp2040-common.dtsi"

/ {
    leds {
        compatible = "gpio-leds";
        led0: led_0 {
            gpios = <&gpio0 16 GPIO_ACTIVE_HIGH>;
        };

        led1: led_1 {
            gpios = <&gpio0 17 GPIO_ACTIVE_HIGH>;
        };

        led2: led_2 {
            gpios = <&gpio0 18 GPIO_ACTIVE_HIGH>;
        };

        led3: led_3 {
            gpios = <&gpio0 19 GPIO_ACTIVE_HIGH>;
        };
    };

    errors_gpio {
        compatible = "gpio-keys";
   		load_overcurrent: load_overcurrent {
   			gpios = <&gpio0 12 GPIO_ACTIVE_LOW>;
   		};

   		batt_overcurrent: batt_overcurrent {
   			gpios = <&gpio0 13 GPIO_ACTIVE_LOW>;
   		};

   		batt_overvoltage: batt_overvoltage {
   			gpios = <&gpio0 14 GPIO_ACTIVE_LOW>;
   		};

   		batt_overtemp: batt_overtemp{
   			gpios = <&gpio0 15 GPIO_ACTIVE_LOW>;
   		};
    };

    pwm_leds {
        compatible = "pwm-leds";
        pwm_buck: pwm_buck_0 {
            pwms = <&pwm 4 PWM_USEC(2) PWM_POLARITY_NORMAL>;
        };

        pwm_boost: pwm_boost_0 {
            pwms = <&pwm 6 PWM_USEC(2) PWM_POLARITY_NORMAL>;
        };
    };

    zephyr,user {
		io-channels = <&adc 0>, <&adc 1>, <&adc 2>, <&adc 3>;
	};

    aliases {
        pwm-buck= &pwm_buck;
        pwm-boost= &pwm_boost;
        load-overcurrent-led = &led0;
        batt-overcurrent-led = &led1;
        batt-overvoltage-led = &led2;
        batt-overtemp-led = &led3;
    };
};

&pwm {
    status = "okay";
};

&adc {
	#address-cells = <1>;
	#size-cells = <0>;

	channel@0 {
		reg = <0>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

    channel@1 {
		reg = <1>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

    channel@2 {
		reg = <2>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

    channel@3 {
		reg = <3>;
		zephyr,gain = "ADC_GAIN_1";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};
};
